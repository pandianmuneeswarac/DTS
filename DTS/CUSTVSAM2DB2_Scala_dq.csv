Sno,Monitor Name,Description,Custom_SQL
1,Completeness: FULL_NAME Not Null,"Checks that the FULL_NAME field is populated for all records in customer_data. Ensures no missing customer names, which are critical for identification.",SELECT COUNT(*) FROM customer_data WHERE FULL_NAME IS NULL
2,Completeness: DATE_OF_BIRTH Not Null,"Checks that the DATE_OF_BIRTH field is populated for all records in customer_data. Ensures no missing birth dates, which are important for age validation and segmentation.",SELECT COUNT(*) FROM customer_data WHERE DATE_OF_BIRTH IS NULL
3,Completeness: GENDER Not Null,"Checks that the GENDER field is populated for all records in customer_data. Ensures no missing gender information, which may be required for reporting and analytics.",SELECT COUNT(*) FROM customer_data WHERE GENDER IS NULL
4,Completeness: ADDRESS Not Null,"Checks that the ADDRESS field is populated for all records in customer_data. Ensures no missing address information, which is essential for contact and compliance.",SELECT COUNT(*) FROM customer_data WHERE ADDRESS IS NULL
5,Completeness: PHONE_NUMBER Not Null,"Checks that the PHONE_NUMBER field is populated for all records in customer_data. Ensures no missing phone numbers, which are necessary for customer communication.",SELECT COUNT(*) FROM customer_data WHERE PHONE_NUMBER IS NULL
6,Completeness: EMAIL_ADDRESS Not Null,"Checks that the EMAIL_ADDRESS field is populated for all records in customer_data. Ensures no missing email addresses, which are required for digital communication.",SELECT COUNT(*) FROM customer_data WHERE EMAIL_ADDRESS IS NULL
7,Completeness: NATID Not Null,"Checks that the NATID field is populated for all records in customer_data. Ensures no missing national IDs, which are important for regulatory compliance and unique identification.",SELECT COUNT(*) FROM customer_data WHERE NATID IS NULL
8,Completeness: OCCUPATION Not Null,"Checks that the OCCUPATION field is populated for all records in customer_data. Ensures no missing occupation information, which may be used for segmentation and eligibility.",SELECT COUNT(*) FROM customer_data WHERE OCCUPATION IS NULL
9,Completeness: CUSTOMER_TYPE Not Null,"Checks that the CUSTOMER_TYPE field is populated for all records in customer_data. Ensures no missing customer type, which is used for segmentation and business logic.",SELECT COUNT(*) FROM customer_data WHERE CUSTOMER_TYPE IS NULL
10,Completeness: ACCOUNT_NUMBERS Not Null,"Checks that the ACCOUNT_NUMBERS field is populated for all records in customer_data. Ensures no missing account numbers, which are necessary for financial operations.",SELECT COUNT(*) FROM customer_data WHERE ACCOUNT_NUMBERS IS NULL
11,Completeness: AGE Not Null,"Checks that the AGE field is populated for all records in customer_data. Ensures no missing age, which is critical for eligibility and segmentation.",SELECT COUNT(*) FROM customer_data WHERE AGE IS NULL
12,Validity: DATE_OF_BIRTH Format,"Checks that the DATE_OF_BIRTH field is in the correct 'YYYY-MM-DD' format, ensuring valid date entries.",SELECT COUNT(*) FROM customer_data WHERE DATE_OF_BIRTH IS NOT NULL AND DATE_OF_BIRTH !~ '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
13,Validity: AGE Minimum Value,"Checks that the AGE field is greater than or equal to 18, enforcing minimum age requirements for customers.",SELECT COUNT(*) FROM customer_data WHERE AGE IS NOT NULL AND AGE < 18
14,Validity: EMAIL_ADDRESS Format,Checks that the EMAIL_ADDRESS field contains a valid email address format (contains '@' and a dot after '@').,SELECT COUNT(*) FROM customer_data WHERE EMAIL_ADDRESS IS NOT NULL AND (POSITION('@' IN EMAIL_ADDRESS) = 0 OR POSITION('.' IN SUBSTRING(EMAIL_ADDRESS FROM POSITION('@' IN EMAIL_ADDRESS)+1)) = 0)
15,Validity: GENDER Domain,"Checks that the GENDER field contains only expected values (e.g., 'Male', 'Female', 'Other').","SELECT COUNT(*) FROM customer_data WHERE GENDER IS NOT NULL AND GENDER NOT IN ('Male','Female','Other')"
16,Validity: CUSTOMER_TYPE Domain,"Checks that the CUSTOMER_TYPE field contains only expected values (e.g., 'Adult', 'Senior', 'Youth').","SELECT COUNT(*) FROM customer_data WHERE CUSTOMER_TYPE IS NOT NULL AND CUSTOMER_TYPE NOT IN ('Adult','Senior','Youth')"
17,Uniqueness: NATID Unique,"Checks that the NATID field is unique across all records in customer_data, ensuring no duplicate national IDs.","SELECT NATID, COUNT(*) FROM customer_data WHERE NATID IS NOT NULL GROUP BY NATID HAVING COUNT(*) > 1"
18,Uniqueness: EMAIL_ADDRESS Unique,"Checks that the EMAIL_ADDRESS field is unique across all records in customer_data, preventing duplicate email addresses.","SELECT EMAIL_ADDRESS, COUNT(*) FROM customer_data WHERE EMAIL_ADDRESS IS NOT NULL GROUP BY EMAIL_ADDRESS HAVING COUNT(*) > 1"
19,Consistency: AGE and DATE_OF_BIRTH,"Checks that the AGE value matches the difference between the current date and DATE_OF_BIRTH, ensuring age is calculated correctly.","SELECT COUNT(*) FROM customer_data WHERE DATE_OF_BIRTH IS NOT NULL AND AGE IS NOT NULL AND AGE <> EXTRACT(YEAR FROM AGE(CURRENT_DATE, DATE_OF_BIRTH))"
20,Validity: PHONE_NUMBER Format,"Checks that the PHONE_NUMBER field contains only digits and optional formatting characters, ensuring valid phone numbers.",SELECT COUNT(*) FROM customer_data WHERE PHONE_NUMBER IS NOT NULL AND PHONE_NUMBER !~ '^[0-9+()-\\s]+$'
21,Completeness: ACCOUNT_NUMBERS Not Empty,"Checks that the ACCOUNT_NUMBERS field is not empty or blank, ensuring account numbers are present.",SELECT COUNT(*) FROM customer_data WHERE ACCOUNT_NUMBERS IS NOT NULL AND TRIM(ACCOUNT_NUMBERS) = ''
22,Validity: OCCUPATION Not Empty,"Checks that the OCCUPATION field is not empty or blank, ensuring occupation information is present.",SELECT COUNT(*) FROM customer_data WHERE OCCUPATION IS NOT NULL AND TRIM(OCCUPATION) = ''
23,Validity: FULL_NAME Not Empty,"Checks that the FULL_NAME field is not empty or blank, ensuring customer names are present.",SELECT COUNT(*) FROM customer_data WHERE FULL_NAME IS NOT NULL AND TRIM(FULL_NAME) = ''
24,Validity: NATID Masking,Checks that the MASKED_NATID field is properly masked (starts with '****' and has 4 digits at the end if length > 4).,SELECT COUNT(*) FROM customer_data WHERE NATID IS NOT NULL AND LENGTH(NATID) > 4 AND MASKED_NATID !~ '^\\*{4}[0-9A-Za-z]{4}$'
